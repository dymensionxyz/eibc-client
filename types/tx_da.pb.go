// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dymensionxyz/dymension/delayedack/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"

	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgFinalizeRollappPacketsByReceiver finalizes the rollapp packets for the specified receiver until the latest
// finalized height inclusively.
type MsgFinalizeRollappPacketsByReceiver struct {
	// Sender is the signer of the message.
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// RollappID is the ID of the rollapp.
	RollappId string `protobuf:"bytes,2,opt,name=rollapp_id,json=rollappId,proto3" json:"rollapp_id,omitempty"`
	// Receiver is the one who waits tokens after the finalization.
	Receiver string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (m *MsgFinalizeRollappPacketsByReceiver) Reset()         { *m = MsgFinalizeRollappPacketsByReceiver{} }
func (m *MsgFinalizeRollappPacketsByReceiver) String() string { return proto.CompactTextString(m) }
func (*MsgFinalizeRollappPacketsByReceiver) ProtoMessage()    {}
func (*MsgFinalizeRollappPacketsByReceiver) Descriptor() ([]byte, []int) {
	return fileDescriptor_604a74c1ca57f5ed, []int{4}
}
func (m *MsgFinalizeRollappPacketsByReceiver) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinalizeRollappPacketsByReceiver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinalizeRollappPacketsByReceiver.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinalizeRollappPacketsByReceiver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinalizeRollappPacketsByReceiver.Merge(m, src)
}
func (m *MsgFinalizeRollappPacketsByReceiver) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinalizeRollappPacketsByReceiver) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinalizeRollappPacketsByReceiver.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinalizeRollappPacketsByReceiver proto.InternalMessageInfo

func (m *MsgFinalizeRollappPacketsByReceiver) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgFinalizeRollappPacketsByReceiver) GetRollappId() string {
	if m != nil {
		return m.RollappId
	}
	return ""
}

func (m *MsgFinalizeRollappPacketsByReceiver) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

type MsgFinalizeRollappPacketsByReceiverResponse struct {
}

func (m *MsgFinalizeRollappPacketsByReceiverResponse) Reset() {
	*m = MsgFinalizeRollappPacketsByReceiverResponse{}
}
func (m *MsgFinalizeRollappPacketsByReceiverResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgFinalizeRollappPacketsByReceiverResponse) ProtoMessage() {}
func (*MsgFinalizeRollappPacketsByReceiverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_604a74c1ca57f5ed, []int{5}
}
func (m *MsgFinalizeRollappPacketsByReceiverResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinalizeRollappPacketsByReceiverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinalizeRollappPacketsByReceiverResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinalizeRollappPacketsByReceiverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinalizeRollappPacketsByReceiverResponse.Merge(m, src)
}
func (m *MsgFinalizeRollappPacketsByReceiverResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinalizeRollappPacketsByReceiverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinalizeRollappPacketsByReceiverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinalizeRollappPacketsByReceiverResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgFinalizeRollappPacketsByReceiver)(nil), "dymensionxyz.dymension.delayedack.MsgFinalizeRollappPacketsByReceiver")
	proto.RegisterType((*MsgFinalizeRollappPacketsByReceiverResponse)(nil), "dymensionxyz.dymension.delayedack.MsgFinalizeRollappPacketsByReceiverResponse")
}

func init() {
	proto.RegisterFile("dymensionxyz/dymension/delayedack/tx.proto", fileDescriptor_604a74c1ca57f5ed)
}

var fileDescriptor_604a74c1ca57f5ed = []byte{
	// 531 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x31, 0x6f, 0xd3, 0x40,
	0x14, 0xc7, 0x73, 0x4d, 0x1b, 0x91, 0x57, 0x29, 0xd0, 0x43, 0x2a, 0xc6, 0xa8, 0x56, 0x08, 0x42,
	0x8d, 0x02, 0xd8, 0x6a, 0x8a, 0x84, 0x84, 0x18, 0x50, 0x91, 0xaa, 0x32, 0x14, 0x15, 0x03, 0x0b,
	0x4b, 0xe4, 0xda, 0x8f, 0xc4, 0xaa, 0x73, 0x67, 0x7c, 0x6e, 0x14, 0x97, 0x05, 0x21, 0xd8, 0xf9,
	0x18, 0x8c, 0x15, 0x23, 0x9f, 0x80, 0xb1, 0x23, 0x23, 0x4a, 0x86, 0x7e, 0x08, 0x16, 0x14, 0xdf,
	0xc5, 0xc4, 0x44, 0x69, 0x21, 0x30, 0xd9, 0xef, 0xde, 0xbb, 0xff, 0xfb, 0xdd, 0xff, 0xec, 0x07,
	0x0d, 0x2f, 0xe9, 0x22, 0x13, 0x3e, 0x67, 0xfd, 0xe4, 0xc8, 0xca, 0x02, 0xcb, 0xc3, 0xc0, 0x49,
	0xd0, 0x73, 0xdc, 0x03, 0x2b, 0xee, 0x9b, 0x61, 0xc4, 0x63, 0x4e, 0xaf, 0x4f, 0xd6, 0x9a, 0x59,
	0x60, 0xfe, 0xaa, 0xd5, 0xaf, 0xb8, 0x5c, 0x74, 0xb9, 0xb0, 0xba, 0xa2, 0x6d, 0xf5, 0x36, 0x46,
	0x0f, 0xb9, 0x57, 0x6f, 0xce, 0xe8, 0xe3, 0xf2, 0x6e, 0x97, 0x33, 0x2b, 0xe2, 0x41, 0xe0, 0x84,
	0x61, 0x2b, 0x74, 0xdc, 0x03, 0x8c, 0xe5, 0x9e, 0xda, 0xe7, 0x05, 0x58, 0xd9, 0x15, 0xed, 0x6d,
	0x9f, 0x39, 0x81, 0x7f, 0x84, 0x7b, 0x69, 0x8e, 0xae, 0x42, 0x49, 0x20, 0xf3, 0x30, 0xd2, 0x48,
	0x95, 0xd4, 0xcb, 0xb6, 0x8a, 0xe8, 0x1a, 0xc0, 0x58, 0xc5, 0xf7, 0xb4, 0x85, 0x34, 0x57, 0x56,
	0x2b, 0x8f, 0x3d, 0x6a, 0xc2, 0x65, 0x29, 0xde, 0x0a, 0x23, 0xce, 0x5f, 0xb5, 0x3a, 0xe8, 0xb7,
	0x3b, 0xb1, 0x56, 0xac, 0x92, 0xfa, 0xa2, 0xbd, 0x22, 0x53, 0x7b, 0xa3, 0xcc, 0x4e, 0x9a, 0xa0,
	0x36, 0x2c, 0xab, 0xfa, 0x38, 0x09, 0x51, 0x5b, 0xac, 0x92, 0x7a, 0xa5, 0xb9, 0x61, 0xce, 0xb0,
	0x40, 0x1e, 0xc3, 0xb4, 0x65, 0x3b, 0x49, 0x6a, 0x3e, 0x4f, 0x42, 0xb4, 0x41, 0xaa, 0x8c, 0xde,
	0xe9, 0x6d, 0xa0, 0x4a, 0x53, 0x44, 0x6e, 0xcb, 0xed, 0x38, 0x8c, 0x61, 0xa0, 0x2d, 0xa5, 0xa8,
	0x97, 0x64, 0xe6, 0x59, 0xe4, 0x3e, 0x92, 0xeb, 0x74, 0x1d, 0x2e, 0x8e, 0xab, 0xf1, 0xf5, 0x21,
	0x32, 0x17, 0xb5, 0x52, 0x4a, 0x5b, 0x51, 0xa5, 0x6a, 0xf5, 0xfe, 0xf2, 0xbb, 0xd3, 0xe3, 0x86,
	0xb2, 0xa1, 0x76, 0x0d, 0xae, 0x4e, 0x79, 0x66, 0xa3, 0x08, 0x39, 0x13, 0x58, 0x7b, 0x03, 0x6b,
	0x53, 0x49, 0xf1, 0x82, 0xc5, 0x7e, 0xa0, 0x4e, 0x3d, 0xa7, 0xb9, 0xab, 0x50, 0xca, 0xf9, 0xa9,
	0xa2, 0x3c, 0xd9, 0x3a, 0xdc, 0x3c, 0xb3, 0x79, 0x46, 0xf9, 0x81, 0xc0, 0x8d, 0x89, 0xca, 0x9c,
	0xa9, 0x62, 0x2b, 0xb1, 0xd1, 0x45, 0xbf, 0x87, 0xd1, 0xbc, 0xb0, 0x3a, 0x5c, 0x88, 0x94, 0x44,
	0x8a, 0x5b, 0xb6, 0xb3, 0x38, 0x0f, 0x7c, 0x07, 0x6e, 0xfd, 0x01, 0xc6, 0x18, 0xbb, 0xf9, 0xa3,
	0x08, 0xc5, 0x5d, 0xd1, 0xa6, 0xef, 0x09, 0x54, 0x7e, 0xfb, 0x66, 0xef, 0x9a, 0xe7, 0xfe, 0x3a,
	0xe6, 0x94, 0x37, 0xfa, 0x83, 0x79, 0x76, 0x8d, 0x71, 0xe8, 0x27, 0x02, 0xfa, 0x19, 0x37, 0xfd,
	0x70, 0x1e, 0xf1, 0x49, 0x05, 0x7d, 0xe7, 0x5f, 0x15, 0x32, 0xd4, 0x2f, 0x04, 0xaa, 0xe7, 0xde,
	0xf6, 0xf6, 0xdf, 0xb5, 0x9b, 0xa5, 0xa3, 0x3f, 0xf9, 0x3f, 0x3a, 0x63, 0x78, 0x7d, 0xe9, 0xed,
	0xe9, 0x71, 0x83, 0x6c, 0x3d, 0xfd, 0x3a, 0x30, 0xc8, 0xc9, 0xc0, 0x20, 0xdf, 0x07, 0x06, 0xf9,
	0x38, 0x34, 0x0a, 0x27, 0x43, 0xa3, 0xf0, 0x6d, 0x68, 0x14, 0x5e, 0xde, 0x6b, 0xfb, 0x71, 0xe7,
	0x70, 0x7f, 0x34, 0x23, 0xac, 0x19, 0x53, 0xb0, 0xb7, 0x69, 0xf5, 0x73, 0x23, 0x37, 0x09, 0x51,
	0xec, 0x97, 0xd2, 0x31, 0xb8, 0xf9, 0x33, 0x00, 0x00, 0xff, 0xff, 0x16, 0xed, 0x0f, 0x08, 0xa4,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

func (c *msgClient) FinalizeRollappPacketsByReceiver(ctx context.Context, in *MsgFinalizeRollappPacketsByReceiver, opts ...grpc.CallOption) (*MsgFinalizeRollappPacketsByReceiverResponse, error) {
	out := new(MsgFinalizeRollappPacketsByReceiverResponse)
	err := c.cc.Invoke(ctx, "/dymensionxyz.dymension.delayedack.Msg/FinalizeRollappPacketsByReceiver", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (m *MsgFinalizeRollappPacketsByReceiver) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinalizeRollappPacketsByReceiver) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinalizeRollappPacketsByReceiver) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RollappId) > 0 {
		i -= len(m.RollappId)
		copy(dAtA[i:], m.RollappId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RollappId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFinalizeRollappPacketsByReceiverResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinalizeRollappPacketsByReceiverResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinalizeRollappPacketsByReceiverResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFinalizeRollappPacketsByReceiver) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RollappId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFinalizeRollappPacketsByReceiverResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFinalizeRollappPacketsByReceiver) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinalizeRollappPacketsByReceiver: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinalizeRollappPacketsByReceiver: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RollappId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RollappId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinalizeRollappPacketsByReceiverResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinalizeRollappPacketsByReceiverResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinalizeRollappPacketsByReceiverResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
